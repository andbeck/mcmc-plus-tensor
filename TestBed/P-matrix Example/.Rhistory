head(compensation)
tail(compensation)
# Explore with dplyr
glimpse(compensation)
#======================
# Working with dplyr
#======================
# here we assign to the Root_Fruit word
# the two column data frame produced
# by select
Root_Fruit <- select(compensation, Root, Fruit)
# with piping
compensation %>% select(Root, Fruit)
# slice - get row 8
slice(compensation, 8)
compensation %>% slice(8)
# get more than one row
compensation %>% slice(8:10)
compensation %>% slice(c(4, 8:10))
# filter Fruit ONLY and > 80
# pipe
Fgr80_pipe<-compensation %>%
select(Fruit)%>%
filter(Fruit > 80)
# no pipe
Fonly<-select(compensation, Fruit)
head(Fonly)
Fgr80_long <- filter(Fonly, Fruit > 80)
# get only grazed
compensation %>%
filter(Grazing == "Grazed")
Fgr80ls20_pipe<-compensation %>%
select(Fruit)%>%
filter(Fruit > 80 | Fruit < 20)
# mutate
compensation <- mutate(compensation, logFruit = log(Fruit))
# First graph with ggplot2
ggplot(compensation, aes(x = Root, y = Fruit))+
geom_point()+
theme_bw()
# libraries
library(tidyverse)
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017', sheet = 1)
library(readxl)
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017', sheet = 1)
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx', sheet = 1)
?read_xlsx
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx', sheet = 1, skip = 6)
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx', sheet = 1, skip = 5)
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 1, skip = 5, nmax = 2)
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 1, skip = 5, n_max = 2)
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 1, skip = 6, n_max = 2)
# data
read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 1, skip = 6, n_max = 1)
# data
dd<-read_excel('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 1, skip = 6, n_max = 1)
head(dd)
dd
as.data.frame(dd)
# data
dd<-read_xlsx('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 1, skip = 6, n_max = 1)
dd
as.data.frame(dd)
# data
dd<-read_xlsx('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 'Summary', skip = 6, n_max = 1)
as.data.frame(dd)
# data
dd<-read_xlsx('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 'Summary', skip = 5, n_max = 2)
as.data.frame(dd)
# data
dd<-read_xlsx('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 'Summary', skip = 5, n_max = 1)
as.data.frame(dd)
aps<-read_xlsx('~/Downloads/Science Admissions Statistics - 1st November 2017.xlsx',
sheet = 'Summary', skip = 5, n_max = 1)
as.data.frame(aps)
?append
library(coda)
library(corpcor)
library(MCMCpack)
library(reshape2)
#library(RAFM)
#library(driftsel) # requires MCMCpack and various bioclite() things (graph)
library(dplyr)
library(ggplot2)
library(gridExtra)
# adjusted functions to accomodate relatedness among clones
source('driftsel_clonal.R', chdir = TRUE)
# adjustment for clonal- S-H Test
# source('~/Dropbox/####workingprojects/APB_Reger_MVPlast_Qst/DriftSel/S-H.test_2.R', chdir = TRUE)
# TO DO: think about the data... do this on just controls for local adapt
# then in Fish vs. in Midge.
# ----------------------------------------------------------------------------------------
load('25Nov_driftsel_factorial.RData')
install.packages('PMA')
install.packges('impute')
install.packages('impute')
source("https://bioconductor.org/biocLite.R")
biocLite("impute")
install.packages('PMA')
library(PMA)
install.packages(integrOmics)
install.packages('integrOmics')
install.packages('mixOmics')
u <- matrix(rnorm(50),ncol=1)
v1 <- matrix(c(rep(.5,25),rep(0,75)),ncol=1)
v2 <- matrix(c(rep(1,25),rep(0,25)),ncol=1)
v3 <- matrix(c(rep(.5,25),rep(0,175)),ncol=1)
x1 <- u%*%t(v1) + matrix(rnorm(50*100),ncol=100)
x2 <- u%*%t(v2) + matrix(rnorm(50*50),ncol=50)
x3 <- u%*%t(v3) + matrix(rnorm(50*200),ncol=200)
xlist <- list(x1, x2, x3)
x1
u <- matrix(rnorm(50),ncol=1)
v1 <- matrix(c(rep(.5,25),rep(0,75)),ncol=1)
v2 <- matrix(c(rep(1,25),rep(0,25)),ncol=1)
v3 <- matrix(c(rep(.5,25),rep(0,175)),ncol=1)
x1 <- u%*%t(v1) + matrix(rnorm(50*100),ncol=100)
x2 <- u%*%t(v2) + matrix(rnorm(50*50),ncol=50)
x3 <- u%*%t(v3) + matrix(rnorm(50*200),ncol=200)
xlist <- list(x1, x2, x3)
perm.out <- MultiCCA.permute(xlist, type=c("standard", "ordered",
"standard"))
print(perm.out)
plot(perm.out)
out <- MultiCCA(xlist, type=c("standard", "ordered", "standard"),
penalty=perm.out$bestpenalties, ncomponents=2, ws=perm.out$ws.init)
print(out)
plot(out)
out <- MultiCCA(xlist, type="ordered", penalty=.6)
par(mfrow=c(3,1))
PlotCGH(out$ws[[1]], chrom=rep(1,ncol(x1)))
PlotCGH(out$ws[[2]], chrom=rep(2,ncol(x2)))
PlotCGH(out$ws[[3]], chrom=rep(3,ncol(x3)))
Sparrows2 <- read.delim("~/Downloads/RChapter12/Sparrows2.txt")
View(Sparrows2)
library(vegan)
update.packages()
library(vegan)
m1<-rda(sparrow, scale = TRUE)
View(Sparrows2)
m1<-rda(Sparrows2, scale = TRUE)
summary(m1)
m1<-prcomp(Sparrows2, scale = TRUE)
m1
m1
summary(m1)
library(foreign)
ab <- read.dta("http://www.stata-press.com/data/lf2/couart2.dta")
mp <- glm(art~fem+mar+kid5+phd+ment, family=poisson, data=ab)
summary(mp)
anova(mp, test  "Chisq")
anova(mp, test"Chisq")
anova(mp, test="Chisq")
summary(mp)
head(ab)
ab
anova(mp, test="Chisq")
library(ggfortify)
autoplot(mp)
autoplot(mp, smooth.colour = NA)
mp2 <- glm(art~fem+mar+kid5+phd+ment, family=quasipoisson, data=ab)
summary(mp2)
library(Rphylopars)
?`Rphylopars-package`
# simulate data
sim_data <- simtraits(ntaxa = 15,ntraits = 4,nreps = 3,nmissing = 10)
# estimate parameters under Brownian motion
# pheno_error = TRUE assumes intraspecific variation
# pheno_correlated = FALSE assumes intraspecific variation is not correlated
# phylo_correlated = TRUE assumed traits are correlated
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,pheno_correlated = TRUE)
PPE
names(PPE)
PPE$anc_var
PPE$anc_recon
summary(PPE)
library(phytools) # for simulating pure-birth phylogenies
set.seed(21) # Set the seed for reproducible results
trait_cov <- matrix(c(4,2,2.2,2,3,1.5,2.2,1.5,2.5),nrow = 3,ncol = 3)
tree <- pbtree(n = 20)
p_lambda <- phylopars(trait_data = sim_data$trait_data,
tree = sim_data$tree,model = "lambda")
p_lambda # Estimated trait covariance and Pagel's lambda
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,
pheno_correlated = TRUE, model = 'lambda')
PPE
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,
pheno_correlated = TRUE, model = 'lambda')
PPE
?simtraits
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,
pheno_correlated = TRUE, model = 'lambda', lambda = 0.6)
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,
pheno_correlated = TRUE, model = 'lambda',
parameters = list(lambda = 0.6))
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,
pheno_correlated = TRUE, model = 'lambda',
parameters = c(lambda = 0.6))
sim_data <- simtraits(ntaxa = 15,ntraits = 4,nreps = 3,nmissing = 10,
model = 'lambda', parameters = list(lambda = 0.6))
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,
pheno_correlated = TRUE, model = 'lambda')
PPE
sim_data <- simtraits(ntaxa = 15,ntraits = 4,nreps = 3,nmissing = 10,
model = 'lambda', parameters = list(lambda = 0.6))
PPE <- phylopars(trait_data = sim_data$trait_data,tree = sim_data$tree,
pheno_error = TRUE,phylo_correlated = TRUE,
pheno_correlated = TRUE, model = 'lambda')
PPE
install.packages("DiagrammeR")
library(DiagrammeR)
?DiagrammeR
# Requires the following libraries
library(mvtnorm)
library(MASS)
library(MCMCglmm)
#############################################################################################################################################################
## Generate G/P matrices for multiple traits
## These are the same matrices used in the Ecology Letter Paper
## They are used to construct the trait values with variability
#############################################################################################################################################################
## First comparison between two matrices that are similar
## but there is a change in variance for one of the matrices
## i.e in one environment everything is integrated, but in
## another there is divergence
# All relationships highly positive between four traits measured
# across two environments (8x8 matrix)
G_1<-matrix(c(
1.0,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,
0.8,   1.0,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,
0.8,   0.8,   1.0,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,
0.8,   0.8,   0.8,   1.0,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,
0.8,   0.8,   0.8,   0.8,   1.0,   0.8,   0.8,   0.8,   0.8,   0.8,
0.8,   0.8,   0.8,   0.8,   0.8,   1.0,   0.8,   0.8,   0.8,   0.8,
0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   1.0,   0.8,   0.8,   0.8,
0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   1.0,   0.8,   0.8,
0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   1.0,   0.8,
0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   0.8,   1.0),10,10)
# NOTE IN THIS SCRIPT WE HAVE ALL TRAITS IN E1 at ~-5 and all traits in E2 at ~5
# generated via residuals with a mean
bv_1 <- lapply(1, mvrnorm, n=200, mu=rep(0,10), Sigma=G_1)
sire1<-lapply(bv_1, function(x) data.frame(sire=rep(1:nrow(x),each=4), rpt=rep(1:4,nrow(x)),
res1=rnorm(800,-6,1.35^2),
res2=rnorm(800,-5,1.35^2),
res3=rnorm(800,-4,1.35^2),
res4=rnorm(800,-4.5,1.35^2),
res5=rnorm(800,-5.5,1.35^2),
res6=rnorm(800,5,1.35^2),
res7=rnorm(800,4,1.35^2),
res8=rnorm(800,6,1.35^2),
res9=rnorm(800,4.5,1.35^2),
res10=rnorm(800,6.5,1.35^2),
bv1=rep(x[,1],each=4),bv2=rep(x[,2],each=4),bv3=rep(x[,3],each=4),bv4=rep(x[,4],each=4),bv5=rep(x[,5],each=4),
bv6=rep(x[,6],each=4),bv7=rep(x[,7],each=4),bv8=rep(x[,8],each=4),bv9=rep(x[,9],each=4),bv10=rep(x[,10],each=4)))
data1<-lapply(sire1, function(x) cbind(x, trait1=x$res1+x$bv1, trait2=x$res2+x$bv2, trait3=x$res3+x$bv3,trait4=x$res4+x$bv4,trait5=x$res5+x$bv5,trait6=x$res6+x$bv6,trait7=x$res7+x$bv7,trait8=x$res8+x$bv8,trait9=x$res9+x$bv9,trait10=x$res10+x$bv10))
# Relationships between traits constant within an environment but
# are negative across environments
G_2<-matrix(c(
1.0,   0.8,   0.8,   0.8,   0.8,  -0.8,  -0.8,  -0.8,  -0.8,  -0.8,
0.8,   1.0,   0.8,   0.8,   0.8,  -0.8,  -0.8,  -0.8,  -0.8,  -0.8,
0.8,   0.8,   1.0,   0.8,   0.8,  -0.8,  -0.8,  -0.8,  -0.8,  -0.8,
0.8,   0.8,   0.8,   1.0,   0.8,  -0.8,  -0.8,  -0.8,  -0.8,  -0.8,
0.8,   0.8,   0.8,   0.8,   1.0,  -0.8,  -0.8,  -0.8,  -0.8,  -0.8,
-0.8,  -0.8,  -0.8,  -0.8,  -0.8,   1.0,   0.8,   0.8,   0.8,   0.8
-0.8,  -0.8,  -0.8,  -0.8,  -0.8,   0.8,   1.0,   0.8,   0.8,   0.8,
-0.8,  -0.8,  -0.8,  -0.8,  -0.8,   0.8,   0.8,   1.0,   0.8,   0.8,
-0.8,  -0.8,  -0.8,  -0.8,  -0.8,   0.8,   0.8,   0.8,   1.0,   0.8,
-0.8,  -0.8,  -0.8,  -0.8,  -0.8,   0.8,   0.8,   0.8,   0.8,   1.0),10,10)
bv_2 <- lapply(1, mvrnorm, n=200, mu=rep(0,10), Sigma=G_2)
sire2<-lapply(bv_2, function(x) data.frame(sire=rep(1:nrow(x),each=4), rpt=rep(1:4,nrow(x)),
res1=rnorm(800,-6,1.35^2),
res2=rnorm(800,-5,1.35^2),
res3=rnorm(800,-4,1.35^2),
res4=rnorm(800,-4.5,1.35^2),
res5=rnorm(800,-5.5,1.35^2),
res6=rnorm(800,5,1.35^2),
res7=rnorm(800,4,1.35^2),
res8=rnorm(800,6,1.35^2),
res9=rnorm(800,4.5,1.35^2),
res10=rnorm(800,6.5,1.35^2),
bv1=rep(x[,1],each=4),bv2=rep(x[,2],each=4),bv3=rep(x[,3],each=4),bv4=rep(x[,4],each=4),bv5=rep(x[,5],each=4),
bv6=rep(x[,6],each=4),bv7=rep(x[,7],each=4),bv8=rep(x[,8],each=4),bv9=rep(x[,9],each=4),bv10=rep(x[,10],each=4)))
data2<-lapply(sire2, function(x) cbind(x, trait1=x$res1+x$bv1, trait2=x$res2+x$bv2, trait3=x$res3+x$bv3,trait4=x$res4+x$bv4,trait5=x$res5+x$bv5,trait6=x$res6+x$bv6,trait7=x$res7+x$bv7,trait8=x$res8+x$bv8,trait9=x$res9+x$bv9,trait10=x$res10+x$bv10))
# One vector in environment 1, two vectors in environments 2
# and relationships between traits reduce.
G_3<-matrix(c(
1.0,   0.8,   0.8,   0.8,   0.8,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   1.0,   0.8,   0.8,   0.8,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   0.8,   1.0,   0.8,   0.8,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   0.8,   0.8,   1.0,   0.8,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   0.8,   0.8,   0.8,   1.0,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   0.8,   0.8,   0.8,   0.8,   1.0,   0.6,   0.4,   0.2,   0.0,
0.6,   0.6,   0.6,   0.6,   0.6,   0.6,   1.0,   0.4,   0.2,   0.0,
0.4,   0.4,   0.4,   0.4,   0.4,   0.4,   0.4,   1.0,   0.2,   0.0,
0.2,   0.2,   0.2,   0.2,   0.2,   0.2,   0.2,   0.2,   1.0,   0.0,
0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   1.0),10,10)
bv_3 <- lapply(1, mvrnorm, n=200, mu=rep(0,10), Sigma=G_3)
sire3<-lapply(bv_3, function(x) data.frame(sire=rep(1:nrow(x),each=4), rpt=rep(1:4,nrow(x)),
res1=rnorm(800,-6,1.35^2),
res2=rnorm(800,-5,1.35^2),
res3=rnorm(800,-4,1.35^2),
res4=rnorm(800,-4.5,1.35^2),
res5=rnorm(800,-5.5,1.35^2),
res6=rnorm(800,5,1.35^2),
res7=rnorm(800,4,1.35^2),
res8=rnorm(800,6,1.35^2),
res9=rnorm(800,4.5,1.35^2),
res10=rnorm(800,6.5,1.35^2),
bv1=rep(x[,1],each=4),bv2=rep(x[,2],each=4),bv3=rep(x[,3],each=4),bv4=rep(x[,4],each=4),bv5=rep(x[,5],each=4),
bv6=rep(x[,6],each=4),bv7=rep(x[,7],each=4),bv8=rep(x[,8],each=4),bv9=rep(x[,9],each=4),bv10=rep(x[,10],each=4)))
data3<-lapply(sire3, function(x) cbind(x, trait1=x$res1+x$bv1, trait2=x$res2+x$bv2, trait3=x$res3+x$bv3,trait4=x$res4+x$bv4,trait5=x$res5+x$bv5,trait6=x$res6+x$bv6,trait7=x$res7+x$bv7,trait8=x$res8+x$bv8,trait9=x$res9+x$bv9,trait10=x$res10+x$bv10))
# One vector in environment 1, two vectors in environments 2
# and relationships between traits reduce. Higher variation
# in environment 2
G_4<-matrix(c(
1.0,   0.8,   0.8,   0.8,   0.8,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   1.0,   0.8,   0.8,   0.8,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   0.8,   1.0,   0.8,   0.8,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   0.8,   0.8,   1.0,   0.8,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   0.8,   0.8,   0.8,   1.0,   0.8,   0.6,   0.4,   0.2,   0.0,
0.8,   0.8,   0.8,   0.8,   0.8,   1.0,   0.6,   0.4,   0.2,   0.0,
0.6,   0.6,   0.6,   0.6,   0.6,   0.6,   1.5,   0.8,   0.4,   0.2,
0.4,   0.4,   0.4,   0.4,   0.4,   0.4,   0.8,   2.0,   1.0,   0.4,
0.2,   0.2,   0.2,   0.2,   0.2,   0.2,   0.4,   1.0,   2.5,   1.2,
0.0,   0.0,   0.0,   0.0,   0.0,   0.0,   0.2,   0.4,   1.2,   3.0),10,10)
bv_4 <- lapply(1, mvrnorm, n=200, mu=rep(0,10), Sigma=G_4) # 2.7.12 found this to be G_3 .... hmmm..... changed to G_4
sire4<-lapply(bv_4, function(x) data.frame(sire=rep(1:nrow(x),each=4), rpt=rep(1:4,nrow(x)),
res1=rnorm(800,-6,1.35^2),
res2=rnorm(800,-5,1.35^2),
res3=rnorm(800,-4,1.35^2),
res4=rnorm(800,-4.5,1.35^2),
res5=rnorm(800,-5.5,1.35^2),
res6=rnorm(800,5,1.35^2),
res7=rnorm(800,4,1.35^2),
res8=rnorm(800,6,1.35^2),
res9=rnorm(800,4.5,1.35^2),
res10=rnorm(800,6.5,1.35^2),
bv1=rep(x[,1],each=4),bv2=rep(x[,2],each=4),bv3=rep(x[,3],each=4),bv4=rep(x[,4],each=4),bv5=rep(x[,5],each=4),
bv6=rep(x[,6],each=4),bv7=rep(x[,7],each=4),bv8=rep(x[,8],each=4),bv9=rep(x[,9],each=4),bv10=rep(x[,10],each=4)))
data4<-lapply(sire4, function(x) cbind(x, trait1=x$res1+x$bv1, trait2=x$res2+x$bv2, trait3=x$res3+x$bv3,trait4=x$res4+x$bv4,trait5=x$res5+x$bv5,trait6=x$res6+x$bv6,trait7=x$res7+x$bv7,trait8=x$res8+x$bv8,trait9=x$res9+x$bv9,trait10=x$res10+x$bv10))
# a more creative phenotype for visualisation
#-5,-2,-1,-2,-3,5,-7,2,1,4
bv_4.1 <- lapply(1, mvrnorm, n=200, mu=rep(0,10), Sigma=G_3)
sire4.1<-lapply(bv_4, function(x) data.frame(sire=rep(1:nrow(x),each=4), rpt=rep(1:4,nrow(x)),
res1=rnorm(800,-5,1.35^2),
res2=rnorm(800,-2,1.35^2),
res3=rnorm(800,-1,1.35^2),
res4=rnorm(800,-2,1.35^2),
res5=rnorm(800,-3,1.35^2),
res6=rnorm(800,5,1.35^2),
res7=rnorm(800,-7,1.35^2),
res8=rnorm(800,2,1.35^2),
res9=rnorm(800,1,1.35^2),
res10=rnorm(800,4,1.35^2),
bv1=rep(x[,1],each=4),bv2=rep(x[,2],each=4),bv3=rep(x[,3],each=4),bv4=rep(x[,4],each=4),bv5=rep(x[,5],each=4),
bv6=rep(x[,6],each=4),bv7=rep(x[,7],each=4),bv8=rep(x[,8],each=4),bv9=rep(x[,9],each=4),bv10=rep(x[,10],each=4)))
data4.1<-lapply(sire4.1, function(x) cbind(x, trait1=x$res1+x$bv1, trait2=x$res2+x$bv2, trait3=x$res3+x$bv3,trait4=x$res4+x$bv4,trait5=x$res5+x$bv5,trait6=x$res6+x$bv6,trait7=x$res7+x$bv7,trait8=x$res8+x$bv8,trait9=x$res9+x$bv9,trait10=x$res10+x$bv10))
# Two vectors in environment 1, two vectors in environments 2
# and relationships between traits reduce. Higher variation
# in environment 2
G_5<-matrix(c(
1.0,   0.6,   0.4,   0.2,   0.0,  -0.8,  -0.6,  -0.4,  -0.2,   0.0,
0.6,   1.0,   0.6,   0.4,   0.2,  -0.6,  -0.8,  -0.6,  -0.4,  -0.2,
0.4,   0.6,   1.0,   0.6,   0.4,  -0.4,  -0.6,  -0.8,  -0.6,  -0.4,
0.2,   0.4,   0.6,   1.0,   0.6,  -0.2,  -0.4,  -0.6,  -0.8,  -0.6,
0.0,   0.2,   0.4,   0.6,   1.0,   0.0,  -0.2,  -0.4,  -0.6,  -0.8,
-0.8,  -0.6,  -0.4,  -0.2,   0.0,   1.0,   0.6,   0.4,   0.2,   0.0,
-0.6,  -0.8,  -0.6,  -0.4,  -0.2,   0.6,   1.5,   1.0,   0.4,   0.2,
-0.4,  -0.6,  -0.8,  -0.6,  -0.4,   0.4,   1.0,   2.0,   1.2,   0.4,
-0.2,  -0.4,  -0.6,  -0.8,  -0.6,   0.2,   0.4,   1.2,   2.5,   1.4,
0.0,  -0.2,  -0.4,  -0.6,  -0.8,   0.0,   0.2,   0.4,   1.4,   3.0),10,10)
bv_5 <- lapply(1, mvrnorm, n=200, mu=rep(0,10), Sigma=G_5)
sire5<-lapply(bv_5, function(x) data.frame(sire=rep(1:nrow(x),each=4), rpt=rep(1:4,nrow(x)),
res1=rnorm(800,-6,1.35^2),
res2=rnorm(800,-5,1.35^2),
res3=rnorm(800,-4,1.35^2),
res4=rnorm(800,-4.5,1.35^2),
res5=rnorm(800,-5.5,1.35^2),
res6=rnorm(800,5,1.35^2),
res7=rnorm(800,4,1.35^2),
res8=rnorm(800,6,1.35^2),
res9=rnorm(800,4.5,1.35^2),
res10=rnorm(800,6.5,1.35^2),
bv1=rep(x[,1],each=4),bv2=rep(x[,2],each=4),bv3=rep(x[,3],each=4),bv4=rep(x[,4],each=4),bv5=rep(x[,5],each=4),
bv6=rep(x[,6],each=4),bv7=rep(x[,7],each=4),bv8=rep(x[,8],each=4),bv9=rep(x[,9],each=4),bv10=rep(x[,10],each=4)))
data5<-lapply(sire5, function(x) cbind(x, trait1=x$res1+x$bv1, trait2=x$res2+x$bv2, trait3=x$res3+x$bv3,trait4=x$res4+x$bv4,trait5=x$res5+x$bv5,trait6=x$res6+x$bv6,trait7=x$res7+x$bv7,trait8=x$res8+x$bv8,trait9=x$res9+x$bv9,trait10=x$res10+x$bv10))
# plot example 4.1
traits<-data4.1[[1]][,23:32]
#	Plot Trait x Env patterns
col2rgb(c("black","red","green","blue","yellow"))
par(mar=c(5,5,4,1))
# plot first trait without axes
plot(traits$trait1~rep(1,800),col=1,xlim=c(0.75,2.5),ylim=c(-12,12),axes=FALSE, ylab="Trait Value", xlab="Environment")
axis(2) # add y axis
axis(1,at=c(1,2)) # add x-axis
# add clone means at jittered locations for E1
points(traits$trait2~rep(1.05,800),col=2,xlim=c(0,3))
points(traits$trait3~rep(1.1,800),col=3,xlim=c(0,3))
points(traits$trait4~rep(0.9,800),col=4,xlim=c(0,3))
points(traits$trait5~rep(0.95,800),col="yellow",xlim=c(0,3))
# add clone means at jittered locations for E2
points(traits$trait6~rep(2,800),col=1,xlim=c(0,3))
points(traits$trait7~rep(2.05,800),col=2,xlim=c(0,3))
points(traits$trait8~rep(2.1,800),col=3,xlim=c(0,3))
points(traits$trait9~rep(1.9,800),col=4,xlim=c(0,3))
points(traits$trait10~rep(1.95,800),col="yellow",xlim=c(0,3))
# add lines between the dots
segments(rep(1,800),traits$trait1,rep(2,800),traits$trait6,rgb(0,0,0,0.2))
segments(rep(1.05,800),traits$trait2,rep(2.05,800),traits$trait7,rgb(1,0,0,0.1))
segments(rep(1.1,800),traits$trait3,rep(2.1,800),traits$trait8,rgb(0,1,0,0.1))
segments(rep(0.9,800),traits$trait4,rep(1.9,800),traits$trait9,rgb(0,0,1,0.2))
segments(rep(0.95,800),traits$trait5,rep(1.95,800),traits$trait10,rgb(1,1,0,0.1))
load("/Users/apb/Dropbox/###Subspace/RCodes/MainMethod/MultiEnv_Phenotype.RData")
load("MultiEnv_Phenotype.RData")
setwd("~/Desktop/P-matrix Example")
load("MultiEnv_Phenotype.RData")
load("SpecialPhenotypeModels.RData")
load("MultiEnv_Phenotype.RData")
load("SpecialPhenotypeModels.RData")
ls()
rm(list = ls())
load("MultiEnv_Phenotype.RData")
ls()
rm(list = ls())
load("SpecialPhenotypeModels.RData")
ls()
load("MultiEnv_Phenotype.RData")
traits<-data4.1[[1]][,23:32]
ls()
# plot multi-trait reaction normsl from example 4.1
traits<-data4[[1]][,23:32]
#	Plot Trait x Env patterns
col2rgb(c("black","red","green","blue","yellow"))
par(mar=c(5,5,4,1))
# plot first trait without axes
plot(traits$trait1~rep(1,800),col=1,xlim=c(0.75,2.5),ylim=c(-12,12),axes=FALSE, ylab="Trait Value", xlab="Environment")
axis(2) # add y axis
axis(1,at=c(1,2)) # add x-axis
# add clone means at jittered locations for E1
points(traits$trait2~rep(1.05,800),col=2,xlim=c(0,3))
points(traits$trait3~rep(1.1,800),col=3,xlim=c(0,3))
points(traits$trait4~rep(0.9,800),col=4,xlim=c(0,3))
points(traits$trait5~rep(0.95,800),col="yellow",xlim=c(0,3))
# add clone means at jittered locations for E2
points(traits$trait6~rep(2,800),col=1,xlim=c(0,3))
points(traits$trait7~rep(2.05,800),col=2,xlim=c(0,3))
points(traits$trait8~rep(2.1,800),col=3,xlim=c(0,3))
points(traits$trait9~rep(1.9,800),col=4,xlim=c(0,3))
points(traits$trait10~rep(1.95,800),col="yellow",xlim=c(0,3))
# add lines between the dots
segments(rep(1,800),traits$trait1,rep(2,800),traits$trait6,rgb(0,0,0,0.2))
segments(rep(1.05,800),traits$trait2,rep(2.05,800),traits$trait7,rgb(1,0,0,0.1))
segments(rep(1.1,800),traits$trait3,rep(2.1,800),traits$trait8,rgb(0,1,0,0.1))
segments(rep(0.9,800),traits$trait4,rep(1.9,800),traits$trait9,rgb(0,0,1,0.2))
segments(rep(0.95,800),traits$trait5,rep(1.95,800),traits$trait10,rgb(1,1,0,0.1))
# all five P models
psb2(model1.1P,model1.2P,no.traits=5,method="P",axes.lab=TRUE)
psb2(model2.1P,model2.2P,no.traits=5,method="P",axes.lab=TRUE)
psb2(model3.1P,model3.2P,no.traits=5,method="P",axes.lab=TRUE)
psb2(model4.1P,model4.2P,no.traits=5,method="P",axes.lab=TRUE)
psb2(model5.1P,model5.2P,no.traits=5,method="P",axes.lab=TRUE)
# plot multi-trait reaction normsl from example 4.1
traits<-data4[[1]][,23:32]
#	Plot Trait x Env patterns
col2rgb(c("black","red","green","blue","yellow"))
par(mar=c(5,5,4,1))
# plot first trait without axes
plot(traits$trait1~rep(1,800),col=1,xlim=c(0.75,2.5),ylim=c(-12,12),axes=FALSE, ylab="Trait Value", xlab="Environment")
axis(2) # add y axis
axis(1,at=c(1,2)) # add x-axis
# add clone means at jittered locations for E1
points(traits$trait2~rep(1.05,800),col=2,xlim=c(0,3))
points(traits$trait3~rep(1.1,800),col=3,xlim=c(0,3))
points(traits$trait4~rep(0.9,800),col=4,xlim=c(0,3))
points(traits$trait5~rep(0.95,800),col="yellow",xlim=c(0,3))
# add clone means at jittered locations for E2
points(traits$trait6~rep(2,800),col=1,xlim=c(0,3))
points(traits$trait7~rep(2.05,800),col=2,xlim=c(0,3))
points(traits$trait8~rep(2.1,800),col=3,xlim=c(0,3))
points(traits$trait9~rep(1.9,800),col=4,xlim=c(0,3))
points(traits$trait10~rep(1.95,800),col="yellow",xlim=c(0,3))
# add lines between the dots
segments(rep(1,800),traits$trait1,rep(2,800),traits$trait6,rgb(0,0,0,0.2))
segments(rep(1.05,800),traits$trait2,rep(2.05,800),traits$trait7,rgb(1,0,0,0.1))
segments(rep(1.1,800),traits$trait3,rep(2.1,800),traits$trait8,rgb(0,1,0,0.1))
segments(rep(0.9,800),traits$trait4,rep(1.9,800),traits$trait9,rgb(0,0,1,0.2))
segments(rep(0.95,800),traits$trait5,rep(1.95,800),traits$trait10,rgb(1,1,0,0.1))
ls()
